/*
Bubble Sort
Bubble Sort is the simplest sorting algorithm that works by repeatedly
swapping the adjacent elements if they are in wrong order.

Worst and Average Case Time Complexity: O(n*n). Worst case occurs when array is reverse sorted.
Best Case Time Complexity: O(n). Best case occurs when array is already sorted.
Auxiliary Space: O(1)
Boundary Cases: Bubble sort takes minimum time (Order of n) when elements are already sorted.
Sorting In Place: Yes
Stable: Yes
*/

/C++
void bubbleSort(vector<int> &vec, int n) {
     for (int i = 0; i < n-1; ++i) {
        for (int j = 0; j < n-i-1; ++i) {
             if (vec[j] > vec[j+1])
                swap(vec[i], vec[i+1]);
        }
     }
}

/Python

def bubbleSort(arr):
   n = len(arr)
   for i in range(n-1):
       for j in range( n-i-1):
           if arr[j] > arr[j+1]:
              arr[j], arr[j+1] = arr[j+1], arr[j];
